<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calendar - Productivity Tracker</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="icon" href="/favicon.ico" type="image/x-icon">
</head>
<body>
  <nav class="navbar">
    <h2>Productivity Tracker</h2>
    <div class="nav-links">
      <a href="/dashboard">Dashboard</a>
      <a href="/calendar" class="active">Calendar</a>
      <a href="/analytics">Analytics</a>
      <a href="/settings">Settings</a>
      <a href="/logout">Logout</a>
    </div>
  </nav>

  <div class="container">
    <h1>Study Hour Calendar</h1>
    <br>
    
    
 
<div class="add-log-form">
      <h2>Add/Update Study Hours</h2>
      <% if (error) { %>
        <div class="error" style="margin-bottom: 20px;"><%= error %></div>
      <% } %>
      <form action="/add-study-log" method="POST">
        <div class="form-row">
          <div class="form-group">
            <label for="date" style="margin-top: 5px;">Date</label>
            <input type="date" id="date" name="date" required>
   
       </div>
          <div class="form-group">
            <label for="hours">Hours Studied</label>
            <input type="number" id="hours" name="hours" step="0.5" min="0" max="24" required>
          </div>
        </div>
        <button type="submit" class="btn">Save</button>
      </form>
    </div>

    <div class="calendar-view">
      
<% 
        const getMonthString = (date) => {
          const year = date.getUTCFullYear();
          const month = String(date.getUTCMonth() + 1).padStart(2, '0');
          return `${year}-${month}`;
        };

        const prevMonthDate = new Date(currentMonth);
        prevMonthDate.setUTCMonth(prevMonthDate.getUTCMonth() - 1);
        const prevMonthString = getMonthString(prevMonthDate);

        const nextMonthDate = new Date(currentMonth);
        nextMonthDate.setUTCMonth(nextMonthDate.getUTCMonth() + 1);
        const nextMonthString = getMonthString(nextMonthDate);

        const today = new Date();
        const isFutureMonth = nextMonthDate.getUTCFullYear() > today.getUTCFullYear() || 
                             (nextMonthDate.getUTCFullYear() === today.getUTCFullYear() && nextMonthDate.getUTCMonth() > today.getUTCMonth());

        const getHeatmapColor = (hours, goal) => {
            if (hours === 0) return 'rgba(220, 53, 69, 0.9)'; // Bright red for 0 hours

            // Below Goal: Red with varying opacity
            if (hours < goal) {
                // Opacity is higher for fewer hours (closer to 0) and lower for hours closer to the goal
                const opacity = 0.8 - (hours / goal) * 0.6; 
                return `rgba(220, 53, 69, ${opacity.toFixed(2)})`;
            }

            // At or Above Goal: GitHub-style green shades
            const excessPercentage = (hours / goal);
            if (excessPercentage < 1.25) return '#39d353';
            if (excessPercentage < 1.75) return '#26a641';
            if (excessPercentage < 2.5) return '#006d32';
            return '#0e4429';
        };
%>

      <div class="calendar-header">
        <a href="/calendar?month=<%= prevMonthString %>" class="month-nav">&larr;</a>
        <h2><%= currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric', timeZone: 'UTC' }) %></h2>
        <a href="<%= isFutureMonth ? '#' : '/calendar?month=' + nextMonthString %>" 
           class="month-nav <%= isFutureMonth ? 'disabled' : '' %>">&rarr;</a>
      </div>

      <div class="calendar-grid">
        <% 
          const daysInMonth = new Date(currentMonth.getUTCFullYear(), currentMonth.getUTCMonth() + 1, 0).getDate();
          for (let day = 1; day <= daysInMonth; day++) {
            const log = logs.find(l => new Date(l.date).getUTCDate() === day);
            const hasLog = log !== undefined;
            const hours = hasLog ? log.hours : -1; // Use -1 to signify no log
            const color = hasLog ? getHeatmapColor(hours, user.dailyGoalHours) : '#2a2a2a';
        %>
          <div class="calendar-day" style="background-color: <%= color %>;">
            <div class="day-number"><%= day %></div>
            <% if (hasLog) { %>
              <div class="day-hours" style="border: 1px solid white;border-radius: 10%; padding:5px "><%= hours.toFixed(1) %>h</div>
            <% } %>
 
         </div>
        <% } %>
      </div>
    </div>
  
    <div class="legend">
        <div class="legend-item">
            <span class="legend-text">0 hours</span>
            <span class="legend-color" style="background-color: rgba(220, 53, 69, 0.9);"></span>
            <span class="legend-color" style="background-color: rgba(220, 53, 69, 0.2);"></span>
            <span class="legend-text">Near Goal</span>
        </div>
        <div class="legend-item">
            <span class="legend-text">Goal Met</span>
            <span class="legend-color" style="background-color: #39d353;"></span>
            <span class="legend-color" style="background-color: #26a641;"></span>
            <span class="legend-color" style="background-color: #006d32;"></span>
            <span class="legend-color" style="background-color: #0e4429;"></span>
            <span class="legend-text">Exceeded</span>
        </div>
    </div>
  </div>

  <script>
    const today = new Date();
    const yyyy = today.getFullYear();
    const mm = String(today.getMonth() + 1).padStart(2, '0');
    const dd = String(today.getDate()).padStart(2, '0');
    const todayString = `${yyyy}-${mm}-${dd}`;
    const dateInput = document.getElementById('date');
    dateInput.value = todayString;
    dateInput.setAttribute('max', todayString);
  </script>
</body>
</html>